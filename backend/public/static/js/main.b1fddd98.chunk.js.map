{"version":3,"sources":["store/reducers/vehicleReducer.js","store/store.js","services/httpService.js","services/locationService.js","store/actions/vehicleAction.js","assets/imgs/logo.png","cmps/AppHeader.jsx","assets/imgs/car.png","assets/imgs/icon-car.svg","assets/imgs/icon-van.svg","assets/imgs/icon-moped.svg","assets/imgs/icon-bicycle.svg","assets/imgs/icon-online.svg","assets/imgs/icon-inride.svg","services/vehicleService.js","services/chartService.js","pages/Charts.jsx","cmps/Marker.jsx","cmps/MapContainer.jsx","cmps/VehiclePreview.jsx","cmps/VehicleList.jsx","pages/FleetMap.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["initialState","vehicles","filteredVehicles","rootReducer","combineReducers","vehicleReducer","state","action","type","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","query","filterBy","locationService","loadVehicles","dispatch","AppHeader","useState","isMenuShown","setIsMenuShown","isTopPage","setIsTopPage","useEffect","addEventListener","handleScroll","removeEventListener","pageYOffset","className","to","src","logo","alt","onClick","vehicleService","car","van","moped","bicycle","online","inRide","defaultCar","classMap","reduce","vehicle","name","class","statusMap","length","text","possible","i","charAt","Math","floor","random","chartService","map","sortedKeys","Object","keys","sort","b","charCodeAt","labels","key","datasets","backgroundColor","borderColor","borderWidth","Charts","useSelector","useDispatch","setClassMap","setStatusMap","barChart","setBarChart","pieChart","setPieChart","queryVehicles","setStatus","setClasses","options","plugins","legend","display","Marker","MapContainer","filterVehicles","coords","setCoords","prevOverlay","setPrevOverlay","extractShapeCoords","overlay","lat","center","lng","radius","ne","getBounds","getNorthEast","sw","getSouthWest","min","max","defaultLocation","zoom","bootstrapURLKeys","libraries","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","maps","shapeOptions","fillColor","strokeColor","fillOpacity","strokeWeight","strokeOpacity","clickable","editable","draggable","zIndex","drawingManager","drawing","DrawingManager","drawingControl","drawingControlOptions","position","ControlPosition","TOP_CENTER","drawingModes","OverlayType","CIRCLE","RECTANGLE","circleOptions","rectangleOptions","event","addListener","setMap","setDrawingMode","clearListeners","costumizeMap","location","_id","VehiclePreview","title","VehicleList","infoContent","FleetMap","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1fddd98.chunk.js","sourcesContent":["const initialState = {\r\n    vehicles: [],\r\n    filteredVehicles: []\r\n}\r\n\r\nexport function vehicleReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_VEHICLES':\r\n            return { ...state, vehicles: action.vehicles };\r\n        case 'SET_FILTERES_VEHICLES':\r\n            return { ...state, filteredVehicles: action.vehicles };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import thunk from 'redux-thunk';\r\nimport {\r\n    createStore,\r\n    applyMiddleware,\r\n    compose,\r\n    combineReducers\r\n} from 'redux';\r\n\r\nimport { vehicleReducer } from './reducers/vehicleReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    vehicleReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV !== 'development'\r\n    ? '/'\r\n    : '//localhost:3030/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            // window.location.assign('/#/login')\r\n        }\r\n        throw err\r\n    }\r\n}","import { httpService } from \"./httpService\"\r\n\r\n\r\nconst BASE_URL = 'api/vehicle'\r\n\r\nconst query = async (filterBy) => {\r\n    const res = await httpService.get(BASE_URL, filterBy)\r\n    return res\r\n}\r\n\r\nexport const locationService = {\r\n    query\r\n}","import { locationService } from \"../../services/locationService\";\r\n\r\nexport const loadVehicles = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const vehicles = await locationService.query()\r\n            dispatch({ type: 'SET_VEHICLES', vehicles })\r\n        } catch (err) {\r\n            console.log('Vehicle Actions: err in loadVehicles', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const filterVehicles = (filterBy) => {\r\n    return async dispatch => {\r\n        if (!filterBy) {\r\n            dispatch({ type: 'SET_FILTERES_VEHICLES', vehicles: [] })\r\n            return\r\n        } else {\r\n            try {\r\n                const vehicles = await locationService.query(filterBy)\r\n                dispatch({ type: 'SET_FILTERES_VEHICLES', vehicles })\r\n            } catch (err) {\r\n                console.log('Vehicle Actions: err in filterVehicles', err)\r\n            }\r\n        }\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.9ea2b80b.png\";","import { useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport logo from '../assets/imgs/logo.png'\r\n\r\nexport function AppHeader() {\r\n\r\n    const [isMenuShown, setIsMenuShown] = useState(false)\r\n    const [isTopPage, setIsTopPage] = useState(true)\r\n\r\n    const toggleMenu = () => setIsMenuShown(!isMenuShown)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll)\r\n        }\r\n    }, [])\r\n\r\n    const handleScroll = () => {\r\n        setIsTopPage(window.pageYOffset === 0)\r\n    }\r\n\r\n    return (\r\n        <header className={`app-header flex space-between ${isTopPage ? '' : 'scroll'}`}>\r\n            <NavLink to=\"/\" className=\"logo\">\r\n                <img src={logo} alt=\"logo\" />\r\n                <span>autofleet</span>\r\n            </NavLink >\r\n            <div className={`btn-menu ${isMenuShown && 'open'}`} onClick={toggleMenu}>\r\n                <span className=\"btn-menu-top\"></span>\r\n                <span className=\"btn-menu-middle\"></span>\r\n                <span className=\"btn-menu-bottom\"></span>\r\n            </div>\r\n            <ul className={`main-nav clean-list flex ${isMenuShown && 'open'}`}>\r\n                <NavLink to=\"/\" className=\"nav-item\" >Fleet</NavLink>\r\n                <NavLink to=\"/about\" className=\"nav-item\" >Statistics</NavLink>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/car.6b9f052e.png\";","export default __webpack_public_path__ + \"static/media/icon-car.7dff49e1.svg\";","export default __webpack_public_path__ + \"static/media/icon-van.05f784d9.svg\";","export default __webpack_public_path__ + \"static/media/icon-moped.f665533d.svg\";","export default __webpack_public_path__ + \"static/media/icon-bicycle.8b3c5fdd.svg\";","export default __webpack_public_path__ + \"static/media/icon-online.02231f50.svg\";","export default __webpack_public_path__ + \"static/media/icon-inride.50b8af09.svg\";","import defaultCar from '../assets/imgs/car.png'\r\nimport car from '../assets/imgs/icon-car.svg'\r\nimport van from '../assets/imgs/icon-van.svg'\r\nimport moped from '../assets/imgs/icon-moped.svg'\r\nimport bicycle from '../assets/imgs/icon-bicycle.svg'\r\nimport online from '../assets/imgs/icon-online.svg'\r\nimport inRide from '../assets/imgs/icon-inride.svg'\r\n\r\nconst getVehicleImg = (type) => {\r\n    switch (type) {\r\n        case 'A':\r\n        case 'E':\r\n            return car\r\n        case 'B':\r\n            return van\r\n        case 'C':\r\n            return moped\r\n        case 'D':\r\n            return bicycle\r\n        case 'online':\r\n            return online\r\n        case 'in-ride':\r\n            return inRide\r\n        default:\r\n            return defaultCar\r\n    }\r\n}\r\n\r\nconst getClassMap = (vehicles) => {\r\n    const classMap = {}\r\n    vehicles.reduce((classMap, vehicle) => {\r\n        const name = vehicle.class.name\r\n        classMap[name] = (classMap[name]) ? classMap[name] + 1 : 1\r\n        return classMap\r\n    }, classMap)\r\n    return classMap\r\n}\r\n\r\nconst getStatusMap = (vehicles) => {\r\n    const statusMap = {}\r\n    vehicles.reduce((statusMap, vehicle) => {\r\n        const status = vehicle.state\r\n        statusMap[status] = (statusMap[status]) ? statusMap[status] + 1 : 1\r\n        return statusMap\r\n    }, statusMap)\r\n    return statusMap\r\n}\r\n\r\nconst makeId = (length = 5) => {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}\r\n\r\nexport const vehicleService = {\r\n    getVehicleImg,\r\n    getClassMap,\r\n    getStatusMap,\r\n    makeId\r\n}\r\n\r\n","const getChartData = (map) => {\r\n    const sortedKeys = Object.keys(map).sort((a, b) => a.charCodeAt() - b.charCodeAt())\r\n    return (\r\n        {\r\n            labels: sortedKeys.map(key => 'Class ' + key),\r\n            datasets: [\r\n                {\r\n                    backgroundColor: ['#28e6c0', '#52c0fa'],\r\n                    borderColor: 'transparent',\r\n                    borderWidth: 2,\r\n                    data: sortedKeys.map(key => map[key])\r\n                }\r\n            ]\r\n        }\r\n    )\r\n}\r\n\r\nexport const chartService = {\r\n    getChartData\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Bar, Pie } from 'react-chartjs-2';\r\n\r\nimport { loadVehicles } from \"../store/actions/vehicleAction\";\r\nimport { vehicleService } from '../services/vehicleService'\r\nimport { chartService } from '../services/chartService';\r\n\r\nexport const Charts = () => {\r\n\r\n    //Connect store\r\n    const { vehicles } = useSelector(({ vehicleReducer }) => vehicleReducer)\r\n    const dispatch = useDispatch()\r\n\r\n    const [classMap, setClassMap] = useState({})\r\n    const [statusMap, setStatusMap] = useState({})\r\n    const [barChart, setBarChart] = useState({ labels: [], datasets: [] })\r\n    const [pieChart, setPieChart] = useState({ labels: [], datasets: [] })\r\n\r\n    useEffect(() => {\r\n        queryVehicles()\r\n    }, [])\r\n\r\n    const queryVehicles = async () => {\r\n        if (!vehicles.length) dispatch(loadVehicles())\r\n        setStatus()\r\n        setClasses()\r\n    }\r\n\r\n    const setStatus = () => {\r\n        const statusMap = vehicleService.getStatusMap(vehicles)\r\n        setStatusMap(statusMap)\r\n        setPieChart(chartService.getChartData(statusMap))\r\n    }\r\n    const setClasses = () => {\r\n        const classMap = vehicleService.getClassMap(vehicles)\r\n        setClassMap(classMap)\r\n        setBarChart(chartService.getChartData(classMap))\r\n    }\r\n\r\n    return (\r\n        <section className=\"charts\">\r\n            <p className=\"head\">Gain full control on your fleet</p>\r\n            <div className=\"content\">\r\n                <div>\r\n                    <h2>Easily index your vehicles</h2>\r\n                    <div className=\"chart bar\">\r\n                        <Bar\r\n                            data={barChart}\r\n                            options={{\r\n                                plugins: {\r\n                                    legend: {\r\n                                        display: false,\r\n                                    }\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"cards\">\r\n                        {Object.keys(classMap).sort((a, b) => a.charCodeAt() - b.charCodeAt()).map(key => {\r\n                            return (\r\n                                <div className=\"card flex col center align-center\" key={vehicleService.makeId()}>\r\n                                    <img src={vehicleService.getVehicleImg(key)} alt=\"car\" />\r\n                                    <h1>class {key}</h1>\r\n                                    <p>{classMap[key]} Vehicles</p>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <h2>Monitor your vehicles status</h2>\r\n                    <div className=\"chart pie\">\r\n                        <Pie\r\n                            data={pieChart}\r\n                            options={{\r\n                                plugins: {\r\n                                    legend: {\r\n                                        display: false,\r\n                                    }\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"cards\">\r\n                        {Object.keys(statusMap).map(key => {\r\n                            return (\r\n                                <div className=\"card flex col center align-center\" key={vehicleService.makeId()}>\r\n                                    <img src={vehicleService.getVehicleImg(key)} alt=\"car\" />\r\n                                    <h1>Vehicles {key}</h1>\r\n                                    <p>{statusMap[key]}  Vehicles</p>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </section >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport car from '../assets/imgs/car.png'\r\n\r\nexport const Marker = () => {\r\n    return (\r\n        <div className=\"marker\">\r\n            <img src={car} alt=\"car\" />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Marker } from './Marker';\r\n\r\nexport const MapContainer = ({ vehicles, filterVehicles }) => {\r\n\r\n    const [coords, setCoords] = useState(null)\r\n    const [prevOverlay, setPrevOverlay] = useState(null)\r\n\r\n    useEffect(() => {\r\n        filterVehicles(coords)\r\n    }, [coords])\r\n\r\n    const extractShapeCoords = (overlay, type) => {\r\n        let coords = {}\r\n\r\n        if (type === 'circle') {\r\n            const lat = overlay.center.lat()\r\n            const lng = overlay.center.lng()\r\n            const radius = overlay.radius\r\n            coords = {\r\n                lat,\r\n                lng,\r\n                radius\r\n            }\r\n        }\r\n\r\n        if (type === 'rectangle') {\r\n            const ne = overlay.getBounds().getNorthEast();\r\n            const sw = overlay.getBounds().getSouthWest();\r\n\r\n            coords = {\r\n                lat: {\r\n                    min: Math.min(ne.lat(), sw.lat()),\r\n                    max: Math.max(ne.lat(), sw.lat())\r\n                },\r\n                lng: {\r\n                    min: Math.min(ne.lng(), sw.lng()),\r\n                    max: Math.max(ne.lng(), sw.lng())\r\n                }\r\n            }\r\n        }\r\n\r\n        setCoords(coords)\r\n    }\r\n\r\n    const defaultLocation = {\r\n        center: {\r\n            lat: 51.503130606915335,\r\n            lng: -0.06902345895766882\r\n        },\r\n        zoom: 12\r\n    }\r\n\r\n    const costumizeMap = (map, maps) => {\r\n\r\n        // Set shape options and style \r\n        const shapeOptions = {\r\n            fillColor: \"#aadaff\",\r\n            strokeColor: \"#9fcee7\",\r\n            fillOpacity: 0.35,\r\n            strokeWeight: 2,\r\n            strokeOpacity: 0.9,\r\n            clickable: true,\r\n            editable: true,\r\n            draggable: true,\r\n            zIndex: 1,\r\n        }\r\n\r\n        // Create and customize the drawing manager \r\n        const drawingManager = new maps.drawing.DrawingManager({\r\n            drawingControl: true,\r\n            drawingControlOptions: {\r\n                position: maps.ControlPosition.TOP_CENTER,\r\n                drawingModes: [\r\n                    maps.drawing.OverlayType.CIRCLE,\r\n                    maps.drawing.OverlayType.RECTANGLE,\r\n                ],\r\n            },\r\n            circleOptions: shapeOptions,\r\n            rectangleOptions: shapeOptions,\r\n        })\r\n\r\n        //Add event listeners\r\n        maps.event.addListener(drawingManager, 'overlaycomplete', ({ overlay, type }) => {\r\n\r\n            // Remove prev shape when creating new one. //STOPPED WORKING. WHY? \r\n            if (prevOverlay) prevOverlay.setMap(null)\r\n            setPrevOverlay(overlay)\r\n\r\n            // Switch back to non-drawing mode after drawing a shape.\r\n            drawingManager.setDrawingMode(null)\r\n\r\n            // Get shape coords for filtering\r\n            extractShapeCoords(overlay, type)\r\n\r\n            // Add listeners on created overlay\r\n            maps.event.addListener(overlay, 'click', () => {\r\n                //Remove overlay on click\r\n                setCoords(null)\r\n                overlay.setMap(null)\r\n            })\r\n            maps.event.addListener(overlay, 'radius_changed', () => {\r\n                //Filter on radius change\r\n                extractShapeCoords(overlay, type)\r\n            })\r\n            maps.event.addListener(overlay, 'bounds_changed', () => {\r\n                //Filter on bounds change\r\n                extractShapeCoords(overlay, type)\r\n            })\r\n            maps.event.addListener(overlay, 'dragstart', () => {\r\n                //Prevent filtering while dragging (when dragging, the bounds change, very expensive)\r\n                maps.event.clearListeners(overlay, 'bounds_changed', () => {\r\n                    extractShapeCoords(overlay, type)\r\n                })\r\n            })\r\n            maps.event.addListener(overlay, 'dragend', () => {\r\n                //Filter on end of drag\r\n                extractShapeCoords(overlay, type)\r\n                //Return filter on bounds change\r\n                maps.event.addListener(overlay, 'bounds_changed', () => {\r\n                    extractShapeCoords(overlay, type)\r\n                })\r\n            })\r\n        })\r\n\r\n        // Place drawing manager on map\r\n        drawingManager.setMap(map)\r\n    }\r\n\r\n    return (\r\n        <div className=\"map-container\">\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{\r\n                    key: 'AIzaSyBbmFIBNJYR3chQJIgeDLJpuACCex0uK0s',\r\n                    libraries: 'drawing'\r\n                }}\r\n                defaultCenter={defaultLocation.center}\r\n                defaultZoom={defaultLocation.zoom}\r\n                yesIWantToUseGoogleMapApiInternals\r\n                onGoogleApiLoaded={({ map, maps }) => costumizeMap(map, maps)}\r\n            >\r\n                {vehicles.map(vehicle => {\r\n                    return <Marker key={vehicle._id} {...vehicle.location} />\r\n                })}\r\n            </GoogleMapReact>\r\n        </div>\r\n    )\r\n}","import { vehicleService } from \"../services/vehicleService\"\r\n\r\n\r\nexport const VehiclePreview = ({ vehicle }) => {\r\n\r\n    return (\r\n        <section className=\"vehicle-preview flex align-center\" title={vehicle.location.lat + ' , ' + vehicle.location.lng}>\r\n            <img src={vehicleService.getVehicleImg(vehicle.class.name)} alt=\"car\" />\r\n            <div className=\"content flex col\">\r\n                <p className=\"vehicle-id\">{vehicle._id}</p>\r\n                <p className=\"vehicle-loc\">{vehicle.location.lat + ' , ' + vehicle.location.lng}</p>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { VehiclePreview } from './VehiclePreview'\r\n\r\nexport const VehicleList = ({ vehicles }) => {\r\n    const infoContent = (vehicles.length) ? \"Click on shape to remove it and reset filtering\" : \"No vehicles for display\"\r\n    return (\r\n        <section className=\"vehicle-list flex col\">\r\n            <p className=\"head\">Marked Vehicles</p>\r\n            <p className=\"info\">{infoContent}</p>\r\n            {!!vehicles.length &&\r\n                <div>\r\n                    {vehicles.map(vehicle => {\r\n                        return <VehiclePreview key={vehicle._id} vehicle={vehicle} />\r\n                    })}\r\n                </div>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { filterVehicles } from \"../store/actions/vehicleAction\";\r\nimport { MapContainer } from \"../cmps/MapContainer\";\r\nimport { VehicleList } from \"../cmps/VehicleList\";\r\n\r\nexport const FleetMap = () => {\r\n\r\n    //Connect store\r\n    const { vehicles, filteredVehicles } = useSelector(({ vehicleReducer }) => vehicleReducer)\r\n    const dispatch = useDispatch()\r\n\r\n    if (!vehicles || !vehicles.length) return <h1 className=\"fleet-map main\">Loading..</h1>\r\n    return (\r\n        <section className=\"fleet-map\">\r\n            <MapContainer vehicles={vehicles} filterVehicles={(filterBy) => dispatch(filterVehicles(filterBy))} />\r\n            <VehicleList vehicles={filteredVehicles} />\r\n        </section>\r\n    )\r\n}\r\n","import {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { loadVehicles } from \"./store/actions/vehicleAction\";\n\nimport { AppHeader } from './cmps/AppHeader';\nimport { Charts } from \"./pages/Charts\";\nimport { FleetMap } from \"./pages/FleetMap\";\n\nexport const App = () => {\n\n  //Connect store\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(loadVehicles())\n  }, [])\n\n  return (\n    <Router>\n      <section className=\"app\">\n        <AppHeader />\n        <Routes>\n          <Route path=\"/\" element={<FleetMap />} />\n          <Route path=\"/about\" element={<Charts />} />\n        </Routes>\n      </section>\n    </Router >\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport {store} from './store/store';\nimport { App } from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nimport './assets/styles/global.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}